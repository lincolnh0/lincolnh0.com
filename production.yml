version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}

services:
  django:
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: lincolnh0_com_production_django
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    labels:
      - traefik.http.routers.django.rule=Host(`www.lincolnh0.com`)
      - traefik.http.routers.django.tls=true
      - traefik.http.routers.django.tls.certresolver=lets-encrypt
      - traefik.http.services.django.loadbalancer.server.port=5000
      - traefik.http.middlewares.test-redirectregex.redirectregex.regex=^https://lincolnh0\.com/(.*)
      - traefik.http.middlewares.test-redirectregex.redirectregex.replacement=https://www.lincolnh0.com/${1}
    command: /start
    networks:
      - internal
      - web

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: lincolnh0_com_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data:Z
      - production_postgres_data_backups:/backups:z
    env_file:
      - ./.envs/.production/.postgres
    labels:
      - traefik.enable=false
    networks:
      - internal

  redis:
    image: redis:6
    labels:
      - traefik.enable=false
    networks:
      - internal

networks:
  web:
    external: true
  internal:
    external: false
